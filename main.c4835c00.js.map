{"version":3,"sources":["scripts/main.js"],"names":["restartButton","start","document","querySelector","messageLose","messageWin","score","allRows","querySelectorAll","countScore","wasMove","listener","e","preventDefault","allCells","activeCells","filter","elem","innerHTML","code","restart","forEach","tr","children","td","i","cellIndex","length","nextTd","addCells","append","randomCell","cell","prepend","row","rowIndex","cellParentIndex","parentElement","clone","cloneNode","emptyrow","find","cells","replaceWith","reverse","reverseRows","innerText","classList","remove","add","randomInteger","min","max","rand","Math","random","floor","random4","emptyCells","num","checkNewMoves","reset","messageStart","hidden","className","addEventListener","check2048","noMoves","push","j","every","value","removeEventListener"],"mappings":"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","file":"main.c4835c00.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst start = document.querySelector('.start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst score = document.querySelector('.game-score');\nlet allRows = document.querySelectorAll(`.field-row`);\nlet countScore = 0;\nlet wasMove = false;\nlet restartButton;\n\nstart.addEventListener('click', () => {\n  reset();\n  randomCell();\n  randomCell(true);\n  document.addEventListener('keydown', listener);\n});\n\nfunction listener(e) {\n  e.preventDefault();\n\n  const allCells = document.querySelectorAll(`.field-cell`);\n\n  allRows = document.querySelectorAll(`.field-row`);\n\n  const activeCells = [...allCells].filter(elem => {\n    return elem.innerHTML !== '';\n  });\n\n  if (e.code === 'ArrowLeft') {\n    if (!restartButton) {\n      restart();\n    }\n\n    allRows.forEach(tr => {\n      let children = [...tr.children];\n\n      children.forEach(td => {\n        if (td.innerHTML !== '') {\n          for (let i = td.cellIndex + 1; i < children.length; i++) {\n            const nextTd = children[i];\n\n            if (td.innerHTML === nextTd.innerHTML) {\n              addCells(td, nextTd);\n\n              break;\n            }\n\n            if ((td.innerHTML !== children[i].innerHTML)\n              && children[i].innerHTML) {\n              return;\n            }\n          }\n        }\n\n        if (td.innerHTML === '') {\n          for (let i = td.cellIndex + 1; i < children.length; i++) {\n            const nextTd = children[i];\n\n            if (nextTd.innerHTML) {\n              tr.append(td);\n              children = tr.children;\n              wasMove = true;\n            }\n          }\n        }\n      });\n    });\n\n    if (wasMove) {\n      randomCell(true);\n      wasMove = false;\n    }\n  }\n\n  if (e.code === 'ArrowRight') {\n    if (!restartButton) {\n      restart();\n    }\n\n    allRows.forEach(tr => {\n      let children = [...tr.children];\n\n      children.forEach(cell => {\n        const td = children[children.length - 1 - cell.cellIndex];\n\n        if (td.innerHTML !== '') {\n          for (let i = td.cellIndex - 1; i >= 0; i--) {\n            const nextTd = children[i];\n\n            if (td.innerHTML === nextTd.innerHTML) {\n              addCells(td, nextTd);\n              break;\n            }\n\n            if ((td.innerHTML !== nextTd.innerHTML) && nextTd.innerHTML) {\n              return;\n            }\n          }\n        }\n      });\n\n      children.forEach(td => {\n        if (td.innerHTML === '') {\n          for (let i = td.cellIndex - 1; i >= 0; i--) {\n            const nextTd = children[i];\n\n            if (nextTd.innerHTML) {\n              tr.prepend(td);\n              children = tr.children;\n              wasMove = true;\n            }\n          }\n        }\n      });\n    });\n\n    if (wasMove) {\n      randomCell(true);\n      wasMove = false;\n    }\n  }\n\n  if (e.code === 'ArrowUp') {\n    if (!restartButton) {\n      restart();\n    }\n\n    allRows.forEach(row => {\n      [...row.children].forEach(td => {\n        for (let i = row.rowIndex + 1; i < allRows.length; i++) {\n          const nextTd = allRows[i].children[td.cellIndex];\n\n          if (!td.innerHTML || !nextTd.innerHTML) {\n            continue;\n          }\n\n          if (td.innerHTML === nextTd.innerHTML) {\n            addCells(td, nextTd);\n            break;\n          }\n\n          if (td.innerHTML !== nextTd.innerHTML && nextTd.innerHTML) {\n            break;\n          }\n        }\n      });\n    });\n\n    activeCells.forEach(cell => {\n      const cellIndex = cell.cellIndex;\n      const cellParentIndex = cell.parentElement.rowIndex;\n      const clone = cell.cloneNode(true);\n\n      let td;\n      const emptyrow = [...allRows].find(tr => {\n        td = tr.querySelector(`.field-cell:nth-child(${cellIndex + 1})`);\n\n        return !td.innerHTML;\n      });\n\n      if (!emptyrow || cellParentIndex < emptyrow.rowIndex) {\n        return;\n      }\n\n      emptyrow.cells[cellIndex].replaceWith(clone);\n      cell.replaceWith(td);\n      wasMove = true;\n    });\n\n    if (wasMove) {\n      randomCell(true);\n      wasMove = false;\n    }\n  }\n\n  if (e.code === 'ArrowDown') {\n    if (!restartButton) {\n      restart();\n    }\n\n    [...allRows].reverse().forEach(row => {\n      [...row.children].reverse().forEach(td => {\n        for (let i = row.rowIndex - 1; i >= 0; i--) {\n          const nextTd = allRows[i].children[td.cellIndex];\n\n          if (!td.innerHTML || !nextTd.innerHTML) {\n            continue;\n          }\n\n          if (td.innerHTML === nextTd.innerHTML) {\n            addCells(td, nextTd);\n            break;\n          }\n\n          if (td.innerHTML !== nextTd.innerHTML && nextTd.innerHTML) {\n            break;\n          }\n        }\n      });\n    });\n\n    activeCells.reverse().forEach(cell => {\n      const cellIndex = cell.cellIndex;\n      const cellParentIndex = cell.parentElement.rowIndex;\n      const clone = cell.cloneNode(true);\n\n      let td;\n      const reverseRows = [...allRows].reverse();\n      const emptyrow = [...reverseRows].find(tr => {\n        td = tr.querySelector(`.field-cell:nth-child(${cellIndex + 1})`);\n\n        return !td.innerHTML;\n      });\n\n      if (!emptyrow || cellParentIndex > emptyrow.rowIndex) {\n        return;\n      }\n\n      emptyrow.cells[cellIndex].replaceWith(clone);\n      cell.replaceWith(td);\n      wasMove = true;\n    });\n\n    if (wasMove) {\n      randomCell(true);\n      wasMove = false;\n    }\n  }\n}\n\nfunction restart() {\n  restartButton = true;\n  start.innerText = 'Restart';\n  start.classList.remove('start');\n  start.classList.add('restart');\n}\n\nfunction randomInteger(min, max) {\n  const rand = min + Math.random() * (max + 1 - min);\n\n  return Math.floor(rand);\n}\n\nfunction randomCell(random4) {\n  const allCells = document.querySelectorAll(`.field-cell`);\n  const emptyCells = [...allCells].filter(td => {\n    return !td.innerHTML;\n  });\n\n  const randomNum = randomInteger(0, emptyCells.length - 1);\n  const cell = emptyCells[randomNum];\n\n  let num = 2;\n\n  if (random4) {\n    const integer = randomInteger(1, 100);\n\n    if (integer <= 10) {\n      num = 4;\n    }\n  }\n\n  cell.classList.add(`field-cell--${num}`);\n  cell.innerText = num;\n\n  if (emptyCells.length === 1) {\n    checkNewMoves();\n  }\n}\n\nfunction reset() {\n  countScore = 0;\n  score.innerHTML = countScore;\n\n  const allCells = document.querySelectorAll('.field-cell');\n  const messageStart = document.querySelector('.message-start');\n\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageStart.hidden = true;\n\n  allCells.forEach(td => {\n    td.className = 'field-cell';\n    td.innerHTML = '';\n  });\n  document.addEventListener('keydown', listener);\n}\n\nfunction addCells(td, nextTd) {\n  td.classList.remove(`field-cell--${td.innerHTML}`);\n  nextTd.classList.remove(`field-cell--${nextTd.innerHTML}`);\n\n  td.innerText = +td.innerHTML + +nextTd.innerHTML;\n\n  td.classList.add(`field-cell--${td.innerText}`);\n  nextTd.innerText = '';\n\n  countScore += +td.innerText;\n  score.innerHTML = countScore;\n\n  wasMove = true;\n  check2048(td.innerText);\n}\n\nfunction checkNewMoves() {\n  const noMoves = [];\n\n  allRows.forEach(tr => {\n    const children = [...tr.children];\n\n    for (let i = 0; i < children.length - 1; i++) {\n      const td = children[i];\n      const nextTd = children[i + 1];\n\n      if (td.innerHTML === nextTd.innerHTML) {\n        noMoves.push(false);\n      }\n    }\n  });\n\n  for (let i = 0; i < allRows.length - 1; i++) {\n    const row = allRows[i];\n\n    for (let j = 0; j < allRows.length; j++) {\n      const td = row.children[j];\n      const nextTd = allRows[row.rowIndex + 1].children[j];\n\n      if (td.innerHTML === nextTd.innerHTML) {\n        noMoves.push(false);\n      }\n    }\n  }\n\n  const noMove = noMoves.every(value => {\n    return value === true;\n  });\n\n  if (noMove) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keydown', listener);\n  }\n}\n\nfunction check2048(num) {\n  if (+num === 2048) {\n    messageWin.classList.remove('hidden');\n    document.removeEventListener('keydown', listener);\n  }\n}\n"]}